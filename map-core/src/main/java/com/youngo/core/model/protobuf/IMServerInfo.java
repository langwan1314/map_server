// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.ServerInfo.proto

package com.youngo.core.model.protobuf;

public final class IMServerInfo {
  private IMServerInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface IMInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.ServerInfo.IMInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 clientCount = 1;</code>
     */
    boolean hasClientCount();
    /**
     * <code>optional uint32 clientCount = 1;</code>
     */
    int getClientCount();

    /**
     * <code>optional uint64 msgCount = 2;</code>
     */
    boolean hasMsgCount();
    /**
     * <code>optional uint64 msgCount = 2;</code>
     */
    long getMsgCount();
  }
  /**
   * Protobuf type {@code IM.ServerInfo.IMInfo}
   */
  public static final class IMInfo extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.ServerInfo.IMInfo)
      IMInfoOrBuilder {
    // Use IMInfo.newBuilder() to construct.
    private IMInfo(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMInfo(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMInfo defaultInstance;
    public static IMInfo getDefaultInstance() {
      return defaultInstance;
    }

    public IMInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              clientCount_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              msgCount_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMInfo> PARSER =
        new com.google.protobuf.AbstractParser<IMInfo>() {
      public IMInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMInfo(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<IMInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CLIENTCOUNT_FIELD_NUMBER = 1;
    private int clientCount_;
    /**
     * <code>optional uint32 clientCount = 1;</code>
     */
    public boolean hasClientCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 clientCount = 1;</code>
     */
    public int getClientCount() {
      return clientCount_;
    }

    public static final int MSGCOUNT_FIELD_NUMBER = 2;
    private long msgCount_;
    /**
     * <code>optional uint64 msgCount = 2;</code>
     */
    public boolean hasMsgCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 msgCount = 2;</code>
     */
    public long getMsgCount() {
      return msgCount_;
    }

    private void initFields() {
      clientCount_ = 0;
      msgCount_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, clientCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, msgCount_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, clientCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, msgCount_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static IMInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IMInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IMInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IMInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IMInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IMInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static IMInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static IMInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static IMInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IMInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(IMInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.ServerInfo.IMInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          IMInfo, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.ServerInfo.IMInfo)
        IMInfoOrBuilder {
      // Construct using com.youngo.core.model.protobuf.IMServerInfo.IMInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        msgCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public IMInfo getDefaultInstanceForType() {
        return IMInfo.getDefaultInstance();
      }

      public IMInfo build() {
        IMInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public IMInfo buildPartial() {
        IMInfo result = new IMInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientCount_ = clientCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msgCount_ = msgCount_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(IMInfo other) {
        if (other == IMInfo.getDefaultInstance()) return this;
        if (other.hasClientCount()) {
          setClientCount(other.getClientCount());
        }
        if (other.hasMsgCount()) {
          setMsgCount(other.getMsgCount());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IMInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IMInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int clientCount_ ;
      /**
       * <code>optional uint32 clientCount = 1;</code>
       */
      public boolean hasClientCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 clientCount = 1;</code>
       */
      public int getClientCount() {
        return clientCount_;
      }
      /**
       * <code>optional uint32 clientCount = 1;</code>
       */
      public Builder setClientCount(int value) {
        bitField0_ |= 0x00000001;
        clientCount_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 clientCount = 1;</code>
       */
      public Builder clearClientCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientCount_ = 0;
        
        return this;
      }

      private long msgCount_ ;
      /**
       * <code>optional uint64 msgCount = 2;</code>
       */
      public boolean hasMsgCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 msgCount = 2;</code>
       */
      public long getMsgCount() {
        return msgCount_;
      }
      /**
       * <code>optional uint64 msgCount = 2;</code>
       */
      public Builder setMsgCount(long value) {
        bitField0_ |= 0x00000002;
        msgCount_ = value;
        
        return this;
      }
      /**
       * <code>optional uint64 msgCount = 2;</code>
       */
      public Builder clearMsgCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msgCount_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.ServerInfo.IMInfo)
    }

    static {
      defaultInstance = new IMInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.ServerInfo.IMInfo)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
