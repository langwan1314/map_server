<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	   		">

	<!-- Enable annotation style of managing transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
		<property name="timeout" value="10" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<!-- Declare a datasource that has pooling capabilities -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" 
		p:driverClass="${app.jdbc.driverClassName}"
		p:jdbcUrl="${app.jdbc.url}" 
		p:user="${app.jdbc.username}" 
		p:password="${app.jdbc.password}"
		p:acquireIncrement="1"
		p:testConnectionOnCheckin ="true"
		p:idleConnectionTestPeriod="120" 
		p:preferredTestQuery="select id from t_post limit 1"
		p:maxIdleTime="3600"
		p:maxConnectionAge="5400"
		p:maxPoolSize="10"
		p:checkoutTimeout="20000" 
		p:minPoolSize="2"
		p:debugUnreturnedConnectionStackTraces="true"
		p:unreturnedConnectionTimeout="3600"
	 />
	<!-- Declare a transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg index="0" ref="dataSource"/>
	</bean>
	
	<!-- define the SqlSessionFactory, notice that configLocation is not needed
		when you use MapperFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="WEB-INF/mybatis/sqlmap-config.xml" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.youngo" />
	</bean>	
</beans>